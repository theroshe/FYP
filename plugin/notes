Produce a walkthrough of the compilation process by the 28th

Explore arm developers page (launchpad), try and make contact
Find examples of written compilers
Look for documentation
Linkedin developers group
One chapter should form a guide to contributing
Look for conferences / papers
Look for contacts (head of csct to find compiler lecturer)
Write up schedule

COnsider impact on multithreading and interrupt handling

http://scheme2006.cs.uchicago.edu/11-ghuloum.pdf 

Look at https://gcc.gnu.org/wiki/ImprovementProjects for ideas other than bit banding

Manuals and code documentation here: https://gcc.gnu.org/onlinedocs/ 


Arm GCC page: https://answers.launchpad.net/gcc-arm-embedded/+question/228758


Which form of syntax should be used to access bit banding?
Current support exposes the bit banding region using pointers, and the addresses manipulated using macros.
This is rather inelegant

Any recommended additions to GCC?
Find something trivial which needs doing to demonstrate the contribution process
Summer of code page had some suggestions (http://gcc.gnu.org/wiki/SummerOfCode)
There are some finished reports on this page, which can be used as guidance

Look for people to contact (names mentioned on dev pages, forums, summer of code)


GCC contributions must have the copyright assigned to the Free Software Foundation

Some processors may have similar atomic operations available
Hardware implementation may differ, but the software implementation will be of use

The package gcc-4.x-plugin-dev is needed to build plugins


Tree macros are in tree.h
